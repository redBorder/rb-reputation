package net.redborder.malware.tasks;

import net.redborder.malware.config.Config;

import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class MalwareTaskController {

    private int THREADS = 5;


    private Map<String, TaskThread> taskList = new HashMap<>();
    private ExecutorService executor = null;

    public MalwareTaskController(Config conf) {
        executor = Executors.newFixedThreadPool(THREADS);
    }

    public void start(){

    }

    public void runTask(Task task){

        final TaskThread thread = new TaskThread(task);
        this.taskList.put(thread.getTask().getTaskName(), thread);

        executor.submit(thread);
    }

    public void runTask(Task task, TaskCompletionListener listener){
        final TaskThread thread = new TaskThread(task);

        thread.addTaskCompletionListener(listener);
        this.taskList.put(thread.getTask().getTaskName(), thread);

        executor.submit(thread);
    }

    public void pauseTask(String taskName){
        this.taskList.get(taskName).pauseTask();

    }

    public void resumetask(String taskName){
        this.taskList.get(taskName).resumeTask();
    }

    public String getTaskStatus(String taskName){
        return this.taskList.containsKey(taskName) ? this.taskList.get(taskName).getCurrentStatusString() : "Task not found!";
    }

    public String getTasksStatus(){

        StringBuilder sb = new StringBuilder();

        for(TaskThread thread : this.taskList.values())
            sb.append(String.format("Task id : %s %n\tStatus : %s%n", thread.getTask().getTaskName(), thread.getCurrentStatusString()));

        return sb.toString();
    }

    public void pauseTasks(){
        for( TaskThread thread : this.taskList.values())
            thread.pauseTask();
    }

    public void resumeTasks(){
        for( TaskThread thread : this.taskList.values())
            thread.resumeTask();
    }

    public void shutdown(){
        this.taskList.clear();
        this.taskList = null;
        executor.shutdown();
    }

}

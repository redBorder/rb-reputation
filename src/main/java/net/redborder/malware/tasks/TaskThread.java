package net.redborder.malware.tasks;

public class TaskThread extends Thread {

    public static enum Status{
        NOT_STARTED, RUNNING, PAUSED, CANCELLING, CANCELLED, COMPLETED, FAILED
    }

    protected Task runningTask;

    protected volatile Status currentStatus;

    protected long taskStartTime;

    protected long taskEndTime;

    public TaskThread(Task toRun){
        this.runningTask = toRun;
        this.currentStatus = Status.NOT_STARTED;
    }

    public void run(){
        try{
            this.currentStatus = Status.RUNNING;
            this.runningTask.doTask();

        }catch(Throwable ex){
            this.currentStatus = Status.FAILED;
        }

    }

    public synchronized void pauseTask(){
        if(this.currentStatus == Status.RUNNING){

            this.currentStatus = Status.PAUSED;
        }
    }

    public synchronized void resumeTask(){
        if(this.currentStatus == Status.PAUSED){

            this.currentStatus = Status.RUNNING;
        }
    }

    public synchronized void cancelTask(){
        if(this.currentStatus == Status.RUNNING ||this.currentStatus == Status.PAUSED){

            this.currentStatus = Status.CANCELLED;
        }
    }

    public Task getTask(){
        return this.runningTask;
    }

    public String getCurrentStatusString() {
        switch (this.currentStatus) {
            case NOT_STARTED:
                return "not started";
            case RUNNING:
                return "running";
            case PAUSED:
                return "paused";
            case CANCELLING:
                return "cancelling";
            case CANCELLED:
                return "cancelled";
            case COMPLETED:
                return "completed";
            case FAILED:
                return "failed";
        }
        return "unknown";
    }

}

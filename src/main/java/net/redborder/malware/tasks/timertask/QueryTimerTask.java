package net.redborder.malware.tasks.timertask;

import net.redborder.malware.managers.AeroSpikeManager;
import net.redborder.malware.tasks.executortask.ConsumeMessages;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.TimerTask;

public class QueryTimerTask extends TimerTask {

    private int OFFSET = 2;

    private AeroSpikeManager asm = null;

    private ArrayList<Map<String, Object>> total;

    private Map<String, ArrayList<Map<String, Object>>> mapeoRevisiones = new HashMap<>();

    private int revision = 0;

    public QueryTimerTask(AeroSpikeManager asm, int numRev) {

        this.asm = asm;

        OFFSET = numRev;

        total = new ArrayList<>();
    }

    public boolean setRevisionOffset(int offset) {

        if (offset > 0) {
            this.OFFSET = offset;
            return true;
        } else {
            return false;
        }

    }

    @Override
    public void run() {

        System.out.println("Created/Update total");
        total = queryTotal();

        if (mapeoRevisiones.isEmpty()) {
            mapeoRevisiones.put(String.format("rev_%d", revision), ConsumeMessages.getRevision());
        } else {
            ConsumeMessages.newRevision();
            revision++;
            mapeoRevisiones.put(String.format("rev_%d", revision), ConsumeMessages.getRevision());
        }

        System.out.println("Created revision : " + revision);

        if (mapeoRevisiones.size() > OFFSET) {
            System.out.println("Deleted revision : " + (revision - OFFSET));
            mapeoRevisiones.remove(String.format("rev_%d", revision - OFFSET));
        }

    }

    private ArrayList<Map<String, Object>> queryTotal() {

        ArrayList<Map<String, Object>> total = asm.getList("malware", "rb_malware");

        for (Map<String, Object> m : total) {
            m.remove("cuckoo_before");
            m.put("action", "create");
        }

        return total;
    }

    public ArrayList<Map<String, Object>> getRevNum(int numRev) {
        String key = String.format("rev_%d", numRev);
        return mapeoRevisiones.containsKey(key) ? mapeoRevisiones.get(key) : null;
    }

    public ArrayList<Map<String, Object>> getTotal() {
        return total;
    }

    public int getCurrentRevision() {
        return revision;
    }

}

package net.redborder.malware.utils;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class HTTP {

    public static Object GET(String url) {

        ArrayList<Map<String, Object>> result = new ArrayList<>();

        CloseableHttpClient client = HttpClients.createDefault();
        HttpGet getRequest = new HttpGet(url);

        getRequest.addHeader("accept", "application/json");

        try {

            CloseableHttpResponse response = client.execute(getRequest);

            HttpEntity entity = response.getEntity();

            if(response.getStatusLine().getStatusCode() == 200)
                if (entity != null) {
                    BufferedReader br = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));

                    String output;

                    ObjectMapper mapper = new ObjectMapper();

                    while ((output = br.readLine()) != null) {
                        result = mapper.readValue(output, new TypeReference<List<Map>>() {
                        });
                    }
                }

            response.close();
            client.close();

        } catch (IOException e) {
            e.printStackTrace();
        }

        return result;

    }


}

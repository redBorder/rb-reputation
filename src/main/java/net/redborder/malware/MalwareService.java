package net.redborder.malware;

import net.redborder.malware.config.Config;
import net.redborder.malware.controllers.MalwareController;
import net.redborder.malware.controllers.MalwareTaskController;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import spark.Session;

import java.util.Comparator;
import java.util.Map;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;

public class MalwareService {

    private static PriorityBlockingQueue<Object> priorityQueue = new PriorityBlockingQueue<>(5000, new Comparator<Object>() {

        @Override
        public int compare(Object o1, Object o2) {

            Session session1 = (Session) o1;
            Session session2 = (Session) o2;

            return Integer.compare((int) session2.attribute("priority"), (int) session1.attribute("priority"));
        }
    });

    private static final Logger log = LoggerFactory.getLogger(MalwareService.class);

    public static void main(String[] args) {

        // Load configuration
        Config conf = new Config("/opt/rb/etc/rb-malware-list/mwlist.properties");

        MalwareController.init(conf);
        MalwareTaskController.init(conf, priorityQueue);
        LocalCache.init(conf);

        IncrementalList.resetIncrementalList();
        LocalCache.reset();

        // Init Malware Controller
        MalwareController.start();

        // Init Workers in Malware Task Controller
        MalwareTaskController.start();

        IncrementalList.start();

        // Init API REST
        MalwareREST.init(conf, priorityQueue);

        Runtime.getRuntime().addShutdownHook(new Thread() {

            public void run() {

                log.info("Shutting down service ...");
                MalwareController.shutdownController();
                MalwareTaskController.shutdownController();
                IncrementalList.shutdown();
                log.info("Shutdown!");

            }
        });

    }
}

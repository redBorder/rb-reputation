package net.redborder.malware.modules.data;

import net.redborder.malware.LocalCache;
import net.redborder.malware.config.Config;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.LinkedBlockingQueue;

public class LocalCacheDataModule extends AbstractDataModule {

    private String keyQuery = "None";
    private String paramQuery = "None";

    public LocalCacheDataModule(Config conf) {
        super(conf);
    }

    @Override
    public Object getFullDataImpl() {
        this.result = LocalCache.getContent();
        return result;
    }

    @Override
    public Object getIncrementalImpl() {
        result = new ArrayList<Map<String, Object>>();
        return result;
    }

    @Override
    public Object doQueryImpl() {
        return LocalCache.read(paramQuery,keyQuery);
    }

    @Override
    public void prepareQueryImpl(Object parameter) {
        Map.Entry<String, Object> entry = (Map.Entry<String, Object>) parameter;
        keyQuery = entry.getValue().toString();
        paramQuery = entry.getKey();
    }

    @Override
    public void initImpl() {
        LocalCache.reset();
    }

    @Override
    public void shutdownImpl() {
        LocalCache.reset();
    }

    @Override
    public String getDataModuleName() {
        return "LocalCache";
    }
}

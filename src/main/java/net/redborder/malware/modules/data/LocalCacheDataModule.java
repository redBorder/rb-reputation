package net.redborder.malware.modules.data;

import net.redborder.malware.LocalCache;
import net.redborder.malware.config.Config;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class LocalCacheDataModule extends AbstractDataModule {

    private static final Logger log = LoggerFactory.getLogger(LocalCache.class);

    public LocalCacheDataModule(Config conf) {
        super(conf);
    }

    @Override
    public Object getFullDataImpl() {

        this.finalResult = new ArrayList<Map<String, Object>>();
        return finalResult;
    }

    @Override
    public Object getIncrementalImpl() {
        finalResult = new ArrayList<Map<String, Object>>();
        return finalResult;
    }

    @Override
    public void prepareQueryImpl(Object parameter) { }

    @Override
    public void initImpl() {
        LocalCache.reset();
    }

    @Override
    public void shutdownImpl() {
        LocalCache.reset();
    }

    @Override
    public void reloadImpl() {

    }

    @Override
    public String getDataModuleName() {
        return "LocalCache";
    }

    @Override
    public Map<String, Object> processQueryURL(String URL) {
        return LocalCache.read(QUERY_PARAM.URL.value, URL);
    }

    @Override
    public Map<String, Object> processQueryHash(String hash) {
        return LocalCache.read(QUERY_PARAM.HASH.value, hash);
    }

    @Override
    public Map<String, Object> processQueryIP(String IP) {
        return LocalCache.read(QUERY_PARAM.IP.value, IP);
    }
}

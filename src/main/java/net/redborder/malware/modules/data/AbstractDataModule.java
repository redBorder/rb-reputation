package net.redborder.malware.modules.data;

import net.redborder.malware.config.Config;

public abstract class AbstractDataModule implements DataModule{

    public enum Operation{
        FULL, INCREMENTAL, QUERY
    }

    public enum Status{
        NOT_INITIALIZATE, READY, PROCESSING, FINISHED
    }

    protected Status status;

    protected Config config;

    protected volatile Operation operation;

    protected Object result;
    protected Object queryParam;

    public AbstractDataModule(Config conf){

        this.config = conf;
        status = Status.NOT_INITIALIZATE;
    }

    public void setOperation(Operation operation){
        this.operation = operation;
    }

    public void queryParameter(Object parameter){
        queryParam = parameter;
    }

    @Override
    public void init(){
        initImpl();
        status = Status.READY;
    }

    @Override
    public Object getFullData(){
        return getFullDataImpl();
    }

    @Override
    public Object getIncremental(){
        return getIncrementalImpl();
    }

    @Override
    public Object doQuery(Object query){
       return doQueryImpl(query);
    }

    @Override
    public void shutdown(){
        shutdownImpl();
    }

    @Override
    public void run(){

        status = Status.PROCESSING;

        switch(operation){
            case FULL:
                result = getFullData();
                break;
            case QUERY:
                result = doQuery(null);
                break;
            case INCREMENTAL:
                result = getIncremental();
                break;
        }

        status = Status.FINISHED;
    }

    public abstract Object getFullDataImpl();
    public abstract Object getIncrementalImpl();
    public abstract Object doQueryImpl(Object query);

    public abstract void initImpl();

    public abstract void shutdownImpl();



}
